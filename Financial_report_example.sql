/*Extract client-level Risk Weighted Assets and a bank's total exposures (Leverage Ratio Denominator) of financial advisors whose 
month-over-month revenue dropped/increased by over 1mln on a specific product line. Select 2 most/least profitable product lines per advisor*/
SET NUMW 15;
WITH CTE1 AS (
SELECT * 
FROM 
	(SELECT a.*, RANK() OVER (PARTITION BY ADVISOR_ID ORDER BY ABS(DELTA) DESC) AS RANKING 
	FROM
		(SELECT 
			REPORTING_LINE_L3, ADVISOR_ID,
			ROUND(SUM(CASE WHEN YR_MNTH = 201902 THEN REVENUE ELSE 0 END), 0) AS REV_201902,
			ROUND(SUM(CASE WHEN YR_MNTH = 201903 THEN REVENUE ELSE 0 END), 0) AS REV_201903,
			ROUND((SUM(CASE WHEN YR_MNTH = 201903 THEN REVENUE ELSE 0 END) - SUM(CASE WHEN YR_MNTH = 201902 THEN REVENUE ELSE 0 END)), 0) AS DELTA 
		FROM
			MY_SCHEMA.ADVISORS_PERFORMANCE
		WHERE
			EXLUSIONS != 'Y' and REPORTING_LINE_L3 IN (SELECT LEVEL_3_CODE FROM MY_SCHEMA.RELEVANT_PRODUCTS) /*Narrow down analyzed data*/
		GROUP BY
			REPORTING_LINE_L3, ADVISOR_ID,
		HAVING
			ABS(SUM(CASE WHEN YR_MNTH = 201903 THEN REVENUE ELSE 0 END) - SUM(CASE WHEN YR_MNTH = 201902 THEN REVENUE ELSE 0 END)) > 1000000
		) a
	)
WHERE
	RANKING <= 2),
	
CTE2 AS (
SELECT DISTINCT
	ADVISOR_ID, BRANCH_ID, EMPLOYMENT_STATUS 
FROM 
	MY_SCHEMA.ADVISORS_INFO 
WHERE
	'28-FEB-2019' BETWEEN ADV_STAT_EFFECTIVE_FROM AND ADV_STAT_EFFECTIVE_TO
),

CTE3 AS (
SELECT DISTINCT
	ADVISOR_ID, BRANCH_ID, EMPLOYMENT_STATUS, ADJ_HIRE_DATE, TERM_DATE /*If an advisor has zeros, check hire date because might be a new joiner or churn (TERM_DATE is not null). We don't really care about last month's hire date*/
FROM
	MY_SCHEMA.ADVISORS_INFO
WHERE
	'31-MAR-2019' BETWEEN ADV_STAT_EFFECTIVE_FROM AND ADV_STAT_EFFECTIVE_TO
),

CTE4 AS (
SELECT
	ADVISOR_ID, CLIENT_ID, PRODUCT_ID,
	ROUND(SUM(CASE WHEN YR_MNTH = 201902 THEN RWA ELSE 0 END), 0) AS FEB_RWA,
	ROUND(SUM(CASE WHEN YR_MNTH = 201903 THEN RWA ELSE 0 END), 0) AS MAR_RWA,
	ROUND(SUM(CASE WHEN YR_MNTH = 201902 THEN LRD ELSE 0 END), 0) AS FEB_LRD,
	ROUND(SUM(CASE WHEN YR_MNTH = 201903 THEN LRD ELSE 0 END), 0) AS MAR_LRD
FROM
	MY_SCHEMA.CLIENT_FINANCIAL_DATA
WHERE
	SNAPSHOT_DATE = '31-MAR-2019' AND YR_MNTH IN (201903, 201902)
	AND TRIM(ADVISOR_ID||PRODUCT_ID) IN (SELECT DISTINCT TRIM(ADVISOR_ID||REPORTING_LINE_L3) FROM CTE1)
GROUP BY
	ADVISOR_ID, CLIENT_ID, PRODUCT_ID
HAVING
	SUM(CASE WHEN YR_MNTH = 201902 THEN LRD ELSE 0 END) != 0
	AND SUM(CASE WHEN YR_MNTH = 201903 THEN LRD ELSE 0 END) != 0 /*If we use OR, we might lose clients who defaulted or joined*/
)

SELECT 
	CTE1.*,
	ADJ_HIRE_DATE AS LATEST_HIRE_DATE,
	CTE3.BRANCH_ID AS CURR_BRANCH_ID,
	CASE WHEN TERM_DATE IS NOT NULL THEN 'Y' ELSE 'N' END AS ADVISOR_CHURN,
	CASE WHEN CTE2.BRANCH_ID != CTE3.BRANCH_ID THEN 'Advisor changed the branch! Prior month: '||CTE2.BRANCH_ID  ELSE '' END AS BRN_SHIFT, /*Might be used for splitting profit between branches*/
	CASE WHEN CTE2.EMPLOYMENT_STATUS != CTE3.EMPLOYMENT_STATUS THEN 'Employee status changed! Prior month: '||CTE2.EMPLOYMENT_STATUS  ELSE '' END AS EMP_STATUS_CHANGE,
	CLIENT_ID, FEB_RWA, MAR_RWA, FEB_LRD, MAR_LRD
FROM CTE1
LEFT JOIN CTE2 ON CTE1.ADVISOR_ID = CTE2.ADVISOR_ID
LEFT JOIN CTE3 ON CTE1.ADVISOR_ID = CTE3.ADVISOR_ID
LEFT JOIN CTE4 ON CTE1.ADVISOR_ID = CTE4.ADVISOR_ID AND CTE1.REPORTING_LINE_L3 = CTE4.PRODUCT_ID;
